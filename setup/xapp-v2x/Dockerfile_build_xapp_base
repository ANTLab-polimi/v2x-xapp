##-----------------------------------
# BS Connector
#------------------------------------
ARG SCHEMA_PATH=schemas
ARG CONNECTOR_DIR=xapp-sm-connector
ARG STAGE_DIR=/home/${CONNECTOR_DIR}
ARG DBAAS_SERVICE_PORT="6379"

ARG PROTOC_ZIP=protoc-3.14.0-linux-x86_64.zip
ARG BASE=/usr
ARG GRPC_WEB=protoc-gen-grpc-web-1.2.1-linux-x86_64
ARG GRPC_WEB_PATH=/usr/bin/protoc-gen-grpc-web

#==================================================================================
FROM ubuntu:22.04 AS xappupdate
# Need to download from rayproject to have ray installed
# FROM rayproject/ray:latest as ricbuild
ARG DEBIAN_FRONTEND=noninteractive

ARG MDC_VER=0.0.4-1
ARG RMR_VER=4.0.5
ARG RNIB_VER=1.0.0

ARG REPOBASE=https://gerrit.oran-osc.org/r
ARG SCHEMA_FILE
ARG SCHEMA_PATH
ARG CONNECTOR_DIR
ARG STAGE_DIR
ARG PROTOC_ZIP
ARG BASE
ARG GRPC_WEB
ARG GRPC_WEB_PATH

# Install necessary packages
RUN apt-get update
RUN apt-get update\
  && apt-get remove -y --purge python* \
  && apt-get install -y \
    python3 \
    python3-pip
# Added - Install gymnasium for RL
RUN pip install xmltodict \
  && pip install numpy \
  && pip install pyswarms \
  && pip install more-itertools
  # && pip install "ray[rllib]" \
  # && pip install tensorflow \
# pip install ray tensorflow torch\
  # && pip install gymnasium \
  # && pip install tensorflow-probability

  # RUN apt-get update && apt-get install -y protobuf-compiler


  # && pip3 install gymnasium \
  # && pip3 install networkx
  # && pip3 install protobuf==3.19.6 \
  # && pip3 install multidict \
  # && pip3 install attr \
  # && pip3 install yarl \
  # && pip3 install async_timeout \
  # && pip3 install idna_ssl \
  # && pip3 install --upgrade setuptools \
  # && pip3 install ray
RUN apt-get update -y \
  && apt-get install -y \
    cmake \
    git \
    build-essential \
    automake \
    autoconf-archive \
    autoconf \
    pkg-config \
    gawk \
    libtool
RUN apt-get update -y \
  && apt-get install -y \
    wget \
    zlib1g-dev \
    libffi-dev \
    libcurl4-openssl-dev \
    vim \
    cpputest \
    libboost-all-dev \
    libhiredis-dev
# Install mdclog using debian package hosted at packagecloud.io
RUN wget -nv --content-disposition https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/mdclog_${MDC_VER}_amd64.deb/download.deb \
  && wget -nv --content-disposition https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/mdclog-dev_${MDC_VER}_amd64.deb/download.deb \
  && dpkg -i mdclog_${MDC_VER}_amd64.deb \
  && dpkg -i mdclog-dev_${MDC_VER}_amd64.deb \
  && rm mdclog_${MDC_VER}_amd64.deb mdclog-dev_${MDC_VER}_amd64.deb \
# Install RMR using debian package hosted at packagecloud.io
  && wget -nv --content-disposition https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/rmr_${RMR_VER}_amd64.deb/download.deb \
  && wget -nv --content-disposition https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/rmr-dev_${RMR_VER}_amd64.deb/download.deb \
  && dpkg -i rmr_${RMR_VER}_amd64.deb \
  && dpkg -i rmr-dev_${RMR_VER}_amd64.deb \
  && rm rmr_${RMR_VER}_amd64.deb rmr-dev_${RMR_VER}_amd64.deb \
# Install RNIB libraries
  && wget -nv --content-disposition https://packagecloud.io/o-ran-sc/release/packages/debian/stretch/rnib_${RNIB_VER}_all.deb/download.deb \
  && dpkg -i rnib_${RNIB_VER}_all.deb \
  && rm rnib_${RNIB_VER}_all.deb
# Install dbaas
RUN mkdir ${STAGE_DIR}
RUN cd ${STAGE_DIR} \
  && git clone https://gerrit.o-ran-sc.org/r/ric-plt/dbaas \
  && cd dbaas/redismodule \
  && ./autogen.sh \
  && ./configure \
  && make -j ${nproc} all \
  && make install \
  && rm -Rf ${STAGE_DIR}/dbaas
# Install sdl
RUN cd ${STAGE_DIR} \
  && git clone https://github.com/fgjeci/sdl.git \
  && cd sdl \
  && ./autogen.sh \
  && ./configure \
  && make -j ${nproc} all \
  && make install \
  && rm -Rf ${STAGE_DIR}/sdl
# && git clone https://gerrit.o-ran-sc.org/r/ric-plt/sdl \
# Install rapidjson
RUN cd ${STAGE_DIR} \
  && git clone https://github.com/Tencent/rapidjson \
  && cd rapidjson \
  && mkdir build \
  && cd build \
  && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. \
  && make -j ${nproc} \
  && make install \
  && cd ${STAGE_DIR} \
  && rm -rf rapidjson

RUN apt-get update && apt-get install -y protobuf-compiler libprotobuf-dev

RUN pip install typing-extensions

# RUN apt-get update -y && apt-get install -y curl unzip
# Install protobuf 3.14


# RUN cd ${STAGE_DIR} \
#   && curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/${PROTOC_ZIP} \
#   && unzip -o ${PROTOC_ZIP} -d ./proto \
#   && chmod 755 -R ./proto/bin \
# # Copy into path
#   && cp ./proto/bin/protoc ${BASE}/bin/ \
#   && cp -R ./proto/include/* ${BASE}/include/

# RUN cd ${STAGE_DIR} \
#   && curl -OL https://github.com/grpc/grpc-web/releases/download/1.2.1/${GRPC_WEB} \
#   && mv ${GRPC_WEB} ${GRPC_WEB_PATH} \
#   && chmod +x ${GRPC_WEB_PATH}

# RUN pip install tensorflow

# install e2sim
COPY ${CONNECTOR_DIR}/ ${STAGE_DIR}/

WORKDIR /home
RUN mkdir -p traces
RUN chmod -rwx traces

WORKDIR ${STAGE_DIR}
# RUN cd src/ns3_decode \
#     && protoc --cpp_out=. sl-sci-msg.proto \
#     && cd ../..
RUN mkdir -p build
RUN ./ric_message_sl.sh

