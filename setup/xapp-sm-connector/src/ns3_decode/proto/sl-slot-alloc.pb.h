// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/sl-slot-alloc.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fsl_2dslot_2dalloc_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fsl_2dslot_2dalloc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/sl-sfnsf.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fsl_2dslot_2dalloc_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fsl_2dslot_2dalloc_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fsl_2dslot_2dalloc_2eproto;
namespace ns3 {
class NrSlSlotAllocProto;
class NrSlSlotAllocProtoDefaultTypeInternal;
extern NrSlSlotAllocProtoDefaultTypeInternal _NrSlSlotAllocProto_default_instance_;
class SlRlcPduInfoProto;
class SlRlcPduInfoProtoDefaultTypeInternal;
extern SlRlcPduInfoProtoDefaultTypeInternal _SlRlcPduInfoProto_default_instance_;
}  // namespace ns3
PROTOBUF_NAMESPACE_OPEN
template<> ::ns3::NrSlSlotAllocProto* Arena::CreateMaybeMessage<::ns3::NrSlSlotAllocProto>(Arena*);
template<> ::ns3::SlRlcPduInfoProto* Arena::CreateMaybeMessage<::ns3::SlRlcPduInfoProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ns3 {

// ===================================================================

class SlRlcPduInfoProto PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ns3.SlRlcPduInfoProto) */ {
 public:
  inline SlRlcPduInfoProto() : SlRlcPduInfoProto(nullptr) {};
  virtual ~SlRlcPduInfoProto();

  SlRlcPduInfoProto(const SlRlcPduInfoProto& from);
  SlRlcPduInfoProto(SlRlcPduInfoProto&& from) noexcept
    : SlRlcPduInfoProto() {
    *this = ::std::move(from);
  }

  inline SlRlcPduInfoProto& operator=(const SlRlcPduInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlRlcPduInfoProto& operator=(SlRlcPduInfoProto&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SlRlcPduInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlRlcPduInfoProto* internal_default_instance() {
    return reinterpret_cast<const SlRlcPduInfoProto*>(
               &_SlRlcPduInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SlRlcPduInfoProto& a, SlRlcPduInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SlRlcPduInfoProto* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SlRlcPduInfoProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SlRlcPduInfoProto* New() const final {
    return CreateMaybeMessage<SlRlcPduInfoProto>(nullptr);
  }

  SlRlcPduInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SlRlcPduInfoProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SlRlcPduInfoProto& from);
  void MergeFrom(const SlRlcPduInfoProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlRlcPduInfoProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ns3.SlRlcPduInfoProto";
  }
  protected:
  explicit SlRlcPduInfoProto(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fsl_2dslot_2dalloc_2eproto);
    return ::descriptor_table_proto_2fsl_2dslot_2dalloc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLcidFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // uint32 lcid = 1;
  void clear_lcid();
  ::PROTOBUF_NAMESPACE_ID::uint32 lcid() const;
  void set_lcid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lcid() const;
  void _internal_set_lcid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ns3.SlRlcPduInfoProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lcid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fsl_2dslot_2dalloc_2eproto;
};
// -------------------------------------------------------------------

class NrSlSlotAllocProto PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ns3.NrSlSlotAllocProto) */ {
 public:
  inline NrSlSlotAllocProto() : NrSlSlotAllocProto(nullptr) {};
  virtual ~NrSlSlotAllocProto();

  NrSlSlotAllocProto(const NrSlSlotAllocProto& from);
  NrSlSlotAllocProto(NrSlSlotAllocProto&& from) noexcept
    : NrSlSlotAllocProto() {
    *this = ::std::move(from);
  }

  inline NrSlSlotAllocProto& operator=(const NrSlSlotAllocProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NrSlSlotAllocProto& operator=(NrSlSlotAllocProto&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NrSlSlotAllocProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NrSlSlotAllocProto* internal_default_instance() {
    return reinterpret_cast<const NrSlSlotAllocProto*>(
               &_NrSlSlotAllocProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NrSlSlotAllocProto& a, NrSlSlotAllocProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NrSlSlotAllocProto* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NrSlSlotAllocProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NrSlSlotAllocProto* New() const final {
    return CreateMaybeMessage<NrSlSlotAllocProto>(nullptr);
  }

  NrSlSlotAllocProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NrSlSlotAllocProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NrSlSlotAllocProto& from);
  void MergeFrom(const NrSlSlotAllocProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NrSlSlotAllocProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ns3.NrSlSlotAllocProto";
  }
  protected:
  explicit NrSlSlotAllocProto(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fsl_2dslot_2dalloc_2eproto);
    return ::descriptor_table_proto_2fsl_2dslot_2dalloc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlRlcPduInfoFieldNumber = 17,
    kSfnFieldNumber = 16,
    kSlPsschSubChLengthFieldNumber = 1,
    kMaxNumPerReserveFieldNumber = 2,
    kTxSci1AFieldNumber = 3,
    kSlotNumIndFieldNumber = 4,
    kSlPsschSubChStartFieldNumber = 5,
    kSlPsschSymLengthFieldNumber = 6,
    kSlPsschSymStartFieldNumber = 7,
    kSlPscchSymLengthFieldNumber = 8,
    kSlPscchSymStartFieldNumber = 9,
    kNumSlPscchRbsFieldNumber = 10,
    kMcsFieldNumber = 11,
    kPriorityFieldNumber = 12,
    kRvFieldNumber = 13,
    kNdiFieldNumber = 14,
    kDstL2IdFieldNumber = 15,
  };
  // repeated .ns3.SlRlcPduInfoProto slRlcPduInfo = 17;
  int slrlcpduinfo_size() const;
  private:
  int _internal_slrlcpduinfo_size() const;
  public:
  void clear_slrlcpduinfo();
  ::ns3::SlRlcPduInfoProto* mutable_slrlcpduinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ns3::SlRlcPduInfoProto >*
      mutable_slrlcpduinfo();
  private:
  const ::ns3::SlRlcPduInfoProto& _internal_slrlcpduinfo(int index) const;
  ::ns3::SlRlcPduInfoProto* _internal_add_slrlcpduinfo();
  public:
  const ::ns3::SlRlcPduInfoProto& slrlcpduinfo(int index) const;
  ::ns3::SlRlcPduInfoProto* add_slrlcpduinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ns3::SlRlcPduInfoProto >&
      slrlcpduinfo() const;

  // .ns3.SfnSfProto sfn = 16;
  bool has_sfn() const;
  private:
  bool _internal_has_sfn() const;
  public:
  void clear_sfn();
  const ::ns3::SfnSfProto& sfn() const;
  ::ns3::SfnSfProto* release_sfn();
  ::ns3::SfnSfProto* mutable_sfn();
  void set_allocated_sfn(::ns3::SfnSfProto* sfn);
  private:
  const ::ns3::SfnSfProto& _internal_sfn() const;
  ::ns3::SfnSfProto* _internal_mutable_sfn();
  public:
  void unsafe_arena_set_allocated_sfn(
      ::ns3::SfnSfProto* sfn);
  ::ns3::SfnSfProto* unsafe_arena_release_sfn();

  // uint32 slPsschSubChLength = 1;
  void clear_slpsschsubchlength();
  ::PROTOBUF_NAMESPACE_ID::uint32 slpsschsubchlength() const;
  void set_slpsschsubchlength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slpsschsubchlength() const;
  void _internal_set_slpsschsubchlength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 maxNumPerReserve = 2;
  void clear_maxnumperreserve();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxnumperreserve() const;
  void set_maxnumperreserve(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxnumperreserve() const;
  void _internal_set_maxnumperreserve(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool txSci1A = 3;
  void clear_txsci1a();
  bool txsci1a() const;
  void set_txsci1a(bool value);
  private:
  bool _internal_txsci1a() const;
  void _internal_set_txsci1a(bool value);
  public:

  // uint32 slotNumInd = 4;
  void clear_slotnumind();
  ::PROTOBUF_NAMESPACE_ID::uint32 slotnumind() const;
  void set_slotnumind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slotnumind() const;
  void _internal_set_slotnumind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 slPsschSubChStart = 5;
  void clear_slpsschsubchstart();
  ::PROTOBUF_NAMESPACE_ID::uint32 slpsschsubchstart() const;
  void set_slpsschsubchstart(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slpsschsubchstart() const;
  void _internal_set_slpsschsubchstart(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 slPsschSymLength = 6;
  void clear_slpsschsymlength();
  ::PROTOBUF_NAMESPACE_ID::uint32 slpsschsymlength() const;
  void set_slpsschsymlength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slpsschsymlength() const;
  void _internal_set_slpsschsymlength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 slPsschSymStart = 7;
  void clear_slpsschsymstart();
  ::PROTOBUF_NAMESPACE_ID::uint32 slpsschsymstart() const;
  void set_slpsschsymstart(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slpsschsymstart() const;
  void _internal_set_slpsschsymstart(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 slPscchSymLength = 8;
  void clear_slpscchsymlength();
  ::PROTOBUF_NAMESPACE_ID::uint32 slpscchsymlength() const;
  void set_slpscchsymlength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slpscchsymlength() const;
  void _internal_set_slpscchsymlength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 slPscchSymStart = 9;
  void clear_slpscchsymstart();
  ::PROTOBUF_NAMESPACE_ID::uint32 slpscchsymstart() const;
  void set_slpscchsymstart(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slpscchsymstart() const;
  void _internal_set_slpscchsymstart(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 numSlPscchRbs = 10;
  void clear_numslpscchrbs();
  ::PROTOBUF_NAMESPACE_ID::uint32 numslpscchrbs() const;
  void set_numslpscchrbs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_numslpscchrbs() const;
  void _internal_set_numslpscchrbs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 mcs = 11;
  void clear_mcs();
  ::PROTOBUF_NAMESPACE_ID::uint32 mcs() const;
  void set_mcs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mcs() const;
  void _internal_set_mcs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 priority = 12;
  void clear_priority();
  ::PROTOBUF_NAMESPACE_ID::uint32 priority() const;
  void set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_priority() const;
  void _internal_set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rv = 13;
  void clear_rv();
  ::PROTOBUF_NAMESPACE_ID::uint32 rv() const;
  void set_rv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rv() const;
  void _internal_set_rv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ndi = 14;
  void clear_ndi();
  ::PROTOBUF_NAMESPACE_ID::uint32 ndi() const;
  void set_ndi(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ndi() const;
  void _internal_set_ndi(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dstL2Id = 15;
  void clear_dstl2id();
  ::PROTOBUF_NAMESPACE_ID::uint32 dstl2id() const;
  void set_dstl2id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dstl2id() const;
  void _internal_set_dstl2id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ns3.NrSlSlotAllocProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ns3::SlRlcPduInfoProto > slrlcpduinfo_;
  ::ns3::SfnSfProto* sfn_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slpsschsubchlength_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxnumperreserve_;
  bool txsci1a_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slotnumind_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slpsschsubchstart_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slpsschsymlength_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slpsschsymstart_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slpscchsymlength_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slpscchsymstart_;
  ::PROTOBUF_NAMESPACE_ID::uint32 numslpscchrbs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mcs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 priority_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rv_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ndi_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dstl2id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fsl_2dslot_2dalloc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SlRlcPduInfoProto

// uint32 lcid = 1;
inline void SlRlcPduInfoProto::clear_lcid() {
  lcid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlRlcPduInfoProto::_internal_lcid() const {
  return lcid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlRlcPduInfoProto::lcid() const {
  // @@protoc_insertion_point(field_get:ns3.SlRlcPduInfoProto.lcid)
  return _internal_lcid();
}
inline void SlRlcPduInfoProto::_internal_set_lcid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lcid_ = value;
}
inline void SlRlcPduInfoProto::set_lcid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lcid(value);
  // @@protoc_insertion_point(field_set:ns3.SlRlcPduInfoProto.lcid)
}

// uint32 size = 2;
inline void SlRlcPduInfoProto::clear_size() {
  size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlRlcPduInfoProto::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlRlcPduInfoProto::size() const {
  // @@protoc_insertion_point(field_get:ns3.SlRlcPduInfoProto.size)
  return _internal_size();
}
inline void SlRlcPduInfoProto::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  size_ = value;
}
inline void SlRlcPduInfoProto::set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:ns3.SlRlcPduInfoProto.size)
}

// -------------------------------------------------------------------

// NrSlSlotAllocProto

// .ns3.SfnSfProto sfn = 16;
inline bool NrSlSlotAllocProto::_internal_has_sfn() const {
  return this != internal_default_instance() && sfn_ != nullptr;
}
inline bool NrSlSlotAllocProto::has_sfn() const {
  return _internal_has_sfn();
}
inline const ::ns3::SfnSfProto& NrSlSlotAllocProto::_internal_sfn() const {
  const ::ns3::SfnSfProto* p = sfn_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ns3::SfnSfProto*>(
      &::ns3::_SfnSfProto_default_instance_);
}
inline const ::ns3::SfnSfProto& NrSlSlotAllocProto::sfn() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.sfn)
  return _internal_sfn();
}
inline void NrSlSlotAllocProto::unsafe_arena_set_allocated_sfn(
    ::ns3::SfnSfProto* sfn) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sfn_);
  }
  sfn_ = sfn;
  if (sfn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ns3.NrSlSlotAllocProto.sfn)
}
inline ::ns3::SfnSfProto* NrSlSlotAllocProto::release_sfn() {
  auto temp = unsafe_arena_release_sfn();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ns3::SfnSfProto* NrSlSlotAllocProto::unsafe_arena_release_sfn() {
  // @@protoc_insertion_point(field_release:ns3.NrSlSlotAllocProto.sfn)
  
  ::ns3::SfnSfProto* temp = sfn_;
  sfn_ = nullptr;
  return temp;
}
inline ::ns3::SfnSfProto* NrSlSlotAllocProto::_internal_mutable_sfn() {
  
  if (sfn_ == nullptr) {
    auto* p = CreateMaybeMessage<::ns3::SfnSfProto>(GetArena());
    sfn_ = p;
  }
  return sfn_;
}
inline ::ns3::SfnSfProto* NrSlSlotAllocProto::mutable_sfn() {
  // @@protoc_insertion_point(field_mutable:ns3.NrSlSlotAllocProto.sfn)
  return _internal_mutable_sfn();
}
inline void NrSlSlotAllocProto::set_allocated_sfn(::ns3::SfnSfProto* sfn) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sfn_);
  }
  if (sfn) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sfn)->GetArena();
    if (message_arena != submessage_arena) {
      sfn = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sfn, submessage_arena);
    }
    
  } else {
    
  }
  sfn_ = sfn;
  // @@protoc_insertion_point(field_set_allocated:ns3.NrSlSlotAllocProto.sfn)
}

// uint32 dstL2Id = 15;
inline void NrSlSlotAllocProto::clear_dstl2id() {
  dstl2id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_dstl2id() const {
  return dstl2id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::dstl2id() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.dstL2Id)
  return _internal_dstl2id();
}
inline void NrSlSlotAllocProto::_internal_set_dstl2id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dstl2id_ = value;
}
inline void NrSlSlotAllocProto::set_dstl2id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dstl2id(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.dstL2Id)
}

// uint32 ndi = 14;
inline void NrSlSlotAllocProto::clear_ndi() {
  ndi_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_ndi() const {
  return ndi_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::ndi() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.ndi)
  return _internal_ndi();
}
inline void NrSlSlotAllocProto::_internal_set_ndi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ndi_ = value;
}
inline void NrSlSlotAllocProto::set_ndi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ndi(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.ndi)
}

// uint32 rv = 13;
inline void NrSlSlotAllocProto::clear_rv() {
  rv_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_rv() const {
  return rv_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::rv() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.rv)
  return _internal_rv();
}
inline void NrSlSlotAllocProto::_internal_set_rv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rv_ = value;
}
inline void NrSlSlotAllocProto::set_rv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rv(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.rv)
}

// uint32 priority = 12;
inline void NrSlSlotAllocProto::clear_priority() {
  priority_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_priority() const {
  return priority_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::priority() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.priority)
  return _internal_priority();
}
inline void NrSlSlotAllocProto::_internal_set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  priority_ = value;
}
inline void NrSlSlotAllocProto::set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.priority)
}

// repeated .ns3.SlRlcPduInfoProto slRlcPduInfo = 17;
inline int NrSlSlotAllocProto::_internal_slrlcpduinfo_size() const {
  return slrlcpduinfo_.size();
}
inline int NrSlSlotAllocProto::slrlcpduinfo_size() const {
  return _internal_slrlcpduinfo_size();
}
inline void NrSlSlotAllocProto::clear_slrlcpduinfo() {
  slrlcpduinfo_.Clear();
}
inline ::ns3::SlRlcPduInfoProto* NrSlSlotAllocProto::mutable_slrlcpduinfo(int index) {
  // @@protoc_insertion_point(field_mutable:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return slrlcpduinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ns3::SlRlcPduInfoProto >*
NrSlSlotAllocProto::mutable_slrlcpduinfo() {
  // @@protoc_insertion_point(field_mutable_list:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return &slrlcpduinfo_;
}
inline const ::ns3::SlRlcPduInfoProto& NrSlSlotAllocProto::_internal_slrlcpduinfo(int index) const {
  return slrlcpduinfo_.Get(index);
}
inline const ::ns3::SlRlcPduInfoProto& NrSlSlotAllocProto::slrlcpduinfo(int index) const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return _internal_slrlcpduinfo(index);
}
inline ::ns3::SlRlcPduInfoProto* NrSlSlotAllocProto::_internal_add_slrlcpduinfo() {
  return slrlcpduinfo_.Add();
}
inline ::ns3::SlRlcPduInfoProto* NrSlSlotAllocProto::add_slrlcpduinfo() {
  // @@protoc_insertion_point(field_add:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return _internal_add_slrlcpduinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ns3::SlRlcPduInfoProto >&
NrSlSlotAllocProto::slrlcpduinfo() const {
  // @@protoc_insertion_point(field_list:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return slrlcpduinfo_;
}

// uint32 mcs = 11;
inline void NrSlSlotAllocProto::clear_mcs() {
  mcs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_mcs() const {
  return mcs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::mcs() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.mcs)
  return _internal_mcs();
}
inline void NrSlSlotAllocProto::_internal_set_mcs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mcs_ = value;
}
inline void NrSlSlotAllocProto::set_mcs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mcs(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.mcs)
}

// uint32 numSlPscchRbs = 10;
inline void NrSlSlotAllocProto::clear_numslpscchrbs() {
  numslpscchrbs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_numslpscchrbs() const {
  return numslpscchrbs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::numslpscchrbs() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.numSlPscchRbs)
  return _internal_numslpscchrbs();
}
inline void NrSlSlotAllocProto::_internal_set_numslpscchrbs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  numslpscchrbs_ = value;
}
inline void NrSlSlotAllocProto::set_numslpscchrbs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_numslpscchrbs(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.numSlPscchRbs)
}

// uint32 slPscchSymStart = 9;
inline void NrSlSlotAllocProto::clear_slpscchsymstart() {
  slpscchsymstart_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_slpscchsymstart() const {
  return slpscchsymstart_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::slpscchsymstart() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPscchSymStart)
  return _internal_slpscchsymstart();
}
inline void NrSlSlotAllocProto::_internal_set_slpscchsymstart(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slpscchsymstart_ = value;
}
inline void NrSlSlotAllocProto::set_slpscchsymstart(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slpscchsymstart(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPscchSymStart)
}

// uint32 slPscchSymLength = 8;
inline void NrSlSlotAllocProto::clear_slpscchsymlength() {
  slpscchsymlength_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_slpscchsymlength() const {
  return slpscchsymlength_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::slpscchsymlength() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPscchSymLength)
  return _internal_slpscchsymlength();
}
inline void NrSlSlotAllocProto::_internal_set_slpscchsymlength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slpscchsymlength_ = value;
}
inline void NrSlSlotAllocProto::set_slpscchsymlength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slpscchsymlength(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPscchSymLength)
}

// uint32 slPsschSymStart = 7;
inline void NrSlSlotAllocProto::clear_slpsschsymstart() {
  slpsschsymstart_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_slpsschsymstart() const {
  return slpsschsymstart_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::slpsschsymstart() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPsschSymStart)
  return _internal_slpsschsymstart();
}
inline void NrSlSlotAllocProto::_internal_set_slpsschsymstart(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slpsschsymstart_ = value;
}
inline void NrSlSlotAllocProto::set_slpsschsymstart(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slpsschsymstart(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPsschSymStart)
}

// uint32 slPsschSymLength = 6;
inline void NrSlSlotAllocProto::clear_slpsschsymlength() {
  slpsschsymlength_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_slpsschsymlength() const {
  return slpsschsymlength_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::slpsschsymlength() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPsschSymLength)
  return _internal_slpsschsymlength();
}
inline void NrSlSlotAllocProto::_internal_set_slpsschsymlength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slpsschsymlength_ = value;
}
inline void NrSlSlotAllocProto::set_slpsschsymlength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slpsschsymlength(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPsschSymLength)
}

// uint32 slPsschSubChStart = 5;
inline void NrSlSlotAllocProto::clear_slpsschsubchstart() {
  slpsschsubchstart_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_slpsschsubchstart() const {
  return slpsschsubchstart_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::slpsschsubchstart() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPsschSubChStart)
  return _internal_slpsschsubchstart();
}
inline void NrSlSlotAllocProto::_internal_set_slpsschsubchstart(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slpsschsubchstart_ = value;
}
inline void NrSlSlotAllocProto::set_slpsschsubchstart(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slpsschsubchstart(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPsschSubChStart)
}

// uint32 slPsschSubChLength = 1;
inline void NrSlSlotAllocProto::clear_slpsschsubchlength() {
  slpsschsubchlength_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_slpsschsubchlength() const {
  return slpsschsubchlength_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::slpsschsubchlength() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPsschSubChLength)
  return _internal_slpsschsubchlength();
}
inline void NrSlSlotAllocProto::_internal_set_slpsschsubchlength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slpsschsubchlength_ = value;
}
inline void NrSlSlotAllocProto::set_slpsschsubchlength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slpsschsubchlength(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPsschSubChLength)
}

// uint32 maxNumPerReserve = 2;
inline void NrSlSlotAllocProto::clear_maxnumperreserve() {
  maxnumperreserve_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_maxnumperreserve() const {
  return maxnumperreserve_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::maxnumperreserve() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.maxNumPerReserve)
  return _internal_maxnumperreserve();
}
inline void NrSlSlotAllocProto::_internal_set_maxnumperreserve(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  maxnumperreserve_ = value;
}
inline void NrSlSlotAllocProto::set_maxnumperreserve(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxnumperreserve(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.maxNumPerReserve)
}

// bool txSci1A = 3;
inline void NrSlSlotAllocProto::clear_txsci1a() {
  txsci1a_ = false;
}
inline bool NrSlSlotAllocProto::_internal_txsci1a() const {
  return txsci1a_;
}
inline bool NrSlSlotAllocProto::txsci1a() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.txSci1A)
  return _internal_txsci1a();
}
inline void NrSlSlotAllocProto::_internal_set_txsci1a(bool value) {
  
  txsci1a_ = value;
}
inline void NrSlSlotAllocProto::set_txsci1a(bool value) {
  _internal_set_txsci1a(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.txSci1A)
}

// uint32 slotNumInd = 4;
inline void NrSlSlotAllocProto::clear_slotnumind() {
  slotnumind_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::_internal_slotnumind() const {
  return slotnumind_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NrSlSlotAllocProto::slotnumind() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slotNumInd)
  return _internal_slotnumind();
}
inline void NrSlSlotAllocProto::_internal_set_slotnumind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slotnumind_ = value;
}
inline void NrSlSlotAllocProto::set_slotnumind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slotnumind(value);
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slotNumInd)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ns3

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fsl_2dslot_2dalloc_2eproto
