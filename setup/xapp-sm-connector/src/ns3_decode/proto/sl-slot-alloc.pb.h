// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl-slot-alloc.proto

#ifndef PROTOBUF_INCLUDED_sl_2dslot_2dalloc_2eproto
#define PROTOBUF_INCLUDED_sl_2dslot_2dalloc_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "sl-sfnsf.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_sl_2dslot_2dalloc_2eproto 

namespace protobuf_sl_2dslot_2dalloc_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_sl_2dslot_2dalloc_2eproto
namespace ns3 {
class NrSlSlotAllocProto;
class NrSlSlotAllocProtoDefaultTypeInternal;
extern NrSlSlotAllocProtoDefaultTypeInternal _NrSlSlotAllocProto_default_instance_;
class SlRlcPduInfoProto;
class SlRlcPduInfoProtoDefaultTypeInternal;
extern SlRlcPduInfoProtoDefaultTypeInternal _SlRlcPduInfoProto_default_instance_;
}  // namespace ns3
namespace google {
namespace protobuf {
template<> ::ns3::NrSlSlotAllocProto* Arena::CreateMaybeMessage<::ns3::NrSlSlotAllocProto>(Arena*);
template<> ::ns3::SlRlcPduInfoProto* Arena::CreateMaybeMessage<::ns3::SlRlcPduInfoProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ns3 {

// ===================================================================

class SlRlcPduInfoProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ns3.SlRlcPduInfoProto) */ {
 public:
  SlRlcPduInfoProto();
  virtual ~SlRlcPduInfoProto();

  SlRlcPduInfoProto(const SlRlcPduInfoProto& from);

  inline SlRlcPduInfoProto& operator=(const SlRlcPduInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlRlcPduInfoProto(SlRlcPduInfoProto&& from) noexcept
    : SlRlcPduInfoProto() {
    *this = ::std::move(from);
  }

  inline SlRlcPduInfoProto& operator=(SlRlcPduInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlRlcPduInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlRlcPduInfoProto* internal_default_instance() {
    return reinterpret_cast<const SlRlcPduInfoProto*>(
               &_SlRlcPduInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SlRlcPduInfoProto* other);
  friend void swap(SlRlcPduInfoProto& a, SlRlcPduInfoProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlRlcPduInfoProto* New() const final {
    return CreateMaybeMessage<SlRlcPduInfoProto>(NULL);
  }

  SlRlcPduInfoProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SlRlcPduInfoProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SlRlcPduInfoProto& from);
  void MergeFrom(const SlRlcPduInfoProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlRlcPduInfoProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 lcid = 1;
  void clear_lcid();
  static const int kLcidFieldNumber = 1;
  ::google::protobuf::uint32 lcid() const;
  void set_lcid(::google::protobuf::uint32 value);

  // uint32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ns3.SlRlcPduInfoProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 lcid_;
  ::google::protobuf::uint32 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sl_2dslot_2dalloc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NrSlSlotAllocProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ns3.NrSlSlotAllocProto) */ {
 public:
  NrSlSlotAllocProto();
  virtual ~NrSlSlotAllocProto();

  NrSlSlotAllocProto(const NrSlSlotAllocProto& from);

  inline NrSlSlotAllocProto& operator=(const NrSlSlotAllocProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NrSlSlotAllocProto(NrSlSlotAllocProto&& from) noexcept
    : NrSlSlotAllocProto() {
    *this = ::std::move(from);
  }

  inline NrSlSlotAllocProto& operator=(NrSlSlotAllocProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NrSlSlotAllocProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NrSlSlotAllocProto* internal_default_instance() {
    return reinterpret_cast<const NrSlSlotAllocProto*>(
               &_NrSlSlotAllocProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(NrSlSlotAllocProto* other);
  friend void swap(NrSlSlotAllocProto& a, NrSlSlotAllocProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NrSlSlotAllocProto* New() const final {
    return CreateMaybeMessage<NrSlSlotAllocProto>(NULL);
  }

  NrSlSlotAllocProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NrSlSlotAllocProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NrSlSlotAllocProto& from);
  void MergeFrom(const NrSlSlotAllocProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NrSlSlotAllocProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ns3.SlRlcPduInfoProto slRlcPduInfo = 17;
  int slrlcpduinfo_size() const;
  void clear_slrlcpduinfo();
  static const int kSlRlcPduInfoFieldNumber = 17;
  ::ns3::SlRlcPduInfoProto* mutable_slrlcpduinfo(int index);
  ::google::protobuf::RepeatedPtrField< ::ns3::SlRlcPduInfoProto >*
      mutable_slrlcpduinfo();
  const ::ns3::SlRlcPduInfoProto& slrlcpduinfo(int index) const;
  ::ns3::SlRlcPduInfoProto* add_slrlcpduinfo();
  const ::google::protobuf::RepeatedPtrField< ::ns3::SlRlcPduInfoProto >&
      slrlcpduinfo() const;

  // .ns3.SfnSfProto sfn = 16;
  bool has_sfn() const;
  void clear_sfn();
  static const int kSfnFieldNumber = 16;
  private:
  const ::ns3::SfnSfProto& _internal_sfn() const;
  public:
  const ::ns3::SfnSfProto& sfn() const;
  ::ns3::SfnSfProto* release_sfn();
  ::ns3::SfnSfProto* mutable_sfn();
  void set_allocated_sfn(::ns3::SfnSfProto* sfn);

  // uint32 slPsschSubChLength = 1;
  void clear_slpsschsubchlength();
  static const int kSlPsschSubChLengthFieldNumber = 1;
  ::google::protobuf::uint32 slpsschsubchlength() const;
  void set_slpsschsubchlength(::google::protobuf::uint32 value);

  // uint32 maxNumPerReserve = 2;
  void clear_maxnumperreserve();
  static const int kMaxNumPerReserveFieldNumber = 2;
  ::google::protobuf::uint32 maxnumperreserve() const;
  void set_maxnumperreserve(::google::protobuf::uint32 value);

  // bool txSci1A = 3;
  void clear_txsci1a();
  static const int kTxSci1AFieldNumber = 3;
  bool txsci1a() const;
  void set_txsci1a(bool value);

  // uint32 slotNumInd = 4;
  void clear_slotnumind();
  static const int kSlotNumIndFieldNumber = 4;
  ::google::protobuf::uint32 slotnumind() const;
  void set_slotnumind(::google::protobuf::uint32 value);

  // uint32 slPsschSubChStart = 5;
  void clear_slpsschsubchstart();
  static const int kSlPsschSubChStartFieldNumber = 5;
  ::google::protobuf::uint32 slpsschsubchstart() const;
  void set_slpsschsubchstart(::google::protobuf::uint32 value);

  // uint32 slPsschSymLength = 6;
  void clear_slpsschsymlength();
  static const int kSlPsschSymLengthFieldNumber = 6;
  ::google::protobuf::uint32 slpsschsymlength() const;
  void set_slpsschsymlength(::google::protobuf::uint32 value);

  // uint32 slPsschSymStart = 7;
  void clear_slpsschsymstart();
  static const int kSlPsschSymStartFieldNumber = 7;
  ::google::protobuf::uint32 slpsschsymstart() const;
  void set_slpsschsymstart(::google::protobuf::uint32 value);

  // uint32 slPscchSymLength = 8;
  void clear_slpscchsymlength();
  static const int kSlPscchSymLengthFieldNumber = 8;
  ::google::protobuf::uint32 slpscchsymlength() const;
  void set_slpscchsymlength(::google::protobuf::uint32 value);

  // uint32 slPscchSymStart = 9;
  void clear_slpscchsymstart();
  static const int kSlPscchSymStartFieldNumber = 9;
  ::google::protobuf::uint32 slpscchsymstart() const;
  void set_slpscchsymstart(::google::protobuf::uint32 value);

  // uint32 numSlPscchRbs = 10;
  void clear_numslpscchrbs();
  static const int kNumSlPscchRbsFieldNumber = 10;
  ::google::protobuf::uint32 numslpscchrbs() const;
  void set_numslpscchrbs(::google::protobuf::uint32 value);

  // uint32 mcs = 11;
  void clear_mcs();
  static const int kMcsFieldNumber = 11;
  ::google::protobuf::uint32 mcs() const;
  void set_mcs(::google::protobuf::uint32 value);

  // uint32 priority = 12;
  void clear_priority();
  static const int kPriorityFieldNumber = 12;
  ::google::protobuf::uint32 priority() const;
  void set_priority(::google::protobuf::uint32 value);

  // uint32 rv = 13;
  void clear_rv();
  static const int kRvFieldNumber = 13;
  ::google::protobuf::uint32 rv() const;
  void set_rv(::google::protobuf::uint32 value);

  // uint32 ndi = 14;
  void clear_ndi();
  static const int kNdiFieldNumber = 14;
  ::google::protobuf::uint32 ndi() const;
  void set_ndi(::google::protobuf::uint32 value);

  // uint32 dstL2Id = 15;
  void clear_dstl2id();
  static const int kDstL2IdFieldNumber = 15;
  ::google::protobuf::uint32 dstl2id() const;
  void set_dstl2id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ns3.NrSlSlotAllocProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ns3::SlRlcPduInfoProto > slrlcpduinfo_;
  ::ns3::SfnSfProto* sfn_;
  ::google::protobuf::uint32 slpsschsubchlength_;
  ::google::protobuf::uint32 maxnumperreserve_;
  bool txsci1a_;
  ::google::protobuf::uint32 slotnumind_;
  ::google::protobuf::uint32 slpsschsubchstart_;
  ::google::protobuf::uint32 slpsschsymlength_;
  ::google::protobuf::uint32 slpsschsymstart_;
  ::google::protobuf::uint32 slpscchsymlength_;
  ::google::protobuf::uint32 slpscchsymstart_;
  ::google::protobuf::uint32 numslpscchrbs_;
  ::google::protobuf::uint32 mcs_;
  ::google::protobuf::uint32 priority_;
  ::google::protobuf::uint32 rv_;
  ::google::protobuf::uint32 ndi_;
  ::google::protobuf::uint32 dstl2id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sl_2dslot_2dalloc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SlRlcPduInfoProto

// uint32 lcid = 1;
inline void SlRlcPduInfoProto::clear_lcid() {
  lcid_ = 0u;
}
inline ::google::protobuf::uint32 SlRlcPduInfoProto::lcid() const {
  // @@protoc_insertion_point(field_get:ns3.SlRlcPduInfoProto.lcid)
  return lcid_;
}
inline void SlRlcPduInfoProto::set_lcid(::google::protobuf::uint32 value) {
  
  lcid_ = value;
  // @@protoc_insertion_point(field_set:ns3.SlRlcPduInfoProto.lcid)
}

// uint32 size = 2;
inline void SlRlcPduInfoProto::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 SlRlcPduInfoProto::size() const {
  // @@protoc_insertion_point(field_get:ns3.SlRlcPduInfoProto.size)
  return size_;
}
inline void SlRlcPduInfoProto::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:ns3.SlRlcPduInfoProto.size)
}

// -------------------------------------------------------------------

// NrSlSlotAllocProto

// .ns3.SfnSfProto sfn = 16;
inline bool NrSlSlotAllocProto::has_sfn() const {
  return this != internal_default_instance() && sfn_ != NULL;
}
inline const ::ns3::SfnSfProto& NrSlSlotAllocProto::_internal_sfn() const {
  return *sfn_;
}
inline const ::ns3::SfnSfProto& NrSlSlotAllocProto::sfn() const {
  const ::ns3::SfnSfProto* p = sfn_;
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.sfn)
  return p != NULL ? *p : *reinterpret_cast<const ::ns3::SfnSfProto*>(
      &::ns3::_SfnSfProto_default_instance_);
}
inline ::ns3::SfnSfProto* NrSlSlotAllocProto::release_sfn() {
  // @@protoc_insertion_point(field_release:ns3.NrSlSlotAllocProto.sfn)
  
  ::ns3::SfnSfProto* temp = sfn_;
  sfn_ = NULL;
  return temp;
}
inline ::ns3::SfnSfProto* NrSlSlotAllocProto::mutable_sfn() {
  
  if (sfn_ == NULL) {
    auto* p = CreateMaybeMessage<::ns3::SfnSfProto>(GetArenaNoVirtual());
    sfn_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ns3.NrSlSlotAllocProto.sfn)
  return sfn_;
}
inline void NrSlSlotAllocProto::set_allocated_sfn(::ns3::SfnSfProto* sfn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sfn_);
  }
  if (sfn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sfn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sfn, submessage_arena);
    }
    
  } else {
    
  }
  sfn_ = sfn;
  // @@protoc_insertion_point(field_set_allocated:ns3.NrSlSlotAllocProto.sfn)
}

// uint32 dstL2Id = 15;
inline void NrSlSlotAllocProto::clear_dstl2id() {
  dstl2id_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::dstl2id() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.dstL2Id)
  return dstl2id_;
}
inline void NrSlSlotAllocProto::set_dstl2id(::google::protobuf::uint32 value) {
  
  dstl2id_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.dstL2Id)
}

// uint32 ndi = 14;
inline void NrSlSlotAllocProto::clear_ndi() {
  ndi_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::ndi() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.ndi)
  return ndi_;
}
inline void NrSlSlotAllocProto::set_ndi(::google::protobuf::uint32 value) {
  
  ndi_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.ndi)
}

// uint32 rv = 13;
inline void NrSlSlotAllocProto::clear_rv() {
  rv_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::rv() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.rv)
  return rv_;
}
inline void NrSlSlotAllocProto::set_rv(::google::protobuf::uint32 value) {
  
  rv_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.rv)
}

// uint32 priority = 12;
inline void NrSlSlotAllocProto::clear_priority() {
  priority_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::priority() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.priority)
  return priority_;
}
inline void NrSlSlotAllocProto::set_priority(::google::protobuf::uint32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.priority)
}

// repeated .ns3.SlRlcPduInfoProto slRlcPduInfo = 17;
inline int NrSlSlotAllocProto::slrlcpduinfo_size() const {
  return slrlcpduinfo_.size();
}
inline void NrSlSlotAllocProto::clear_slrlcpduinfo() {
  slrlcpduinfo_.Clear();
}
inline ::ns3::SlRlcPduInfoProto* NrSlSlotAllocProto::mutable_slrlcpduinfo(int index) {
  // @@protoc_insertion_point(field_mutable:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return slrlcpduinfo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ns3::SlRlcPduInfoProto >*
NrSlSlotAllocProto::mutable_slrlcpduinfo() {
  // @@protoc_insertion_point(field_mutable_list:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return &slrlcpduinfo_;
}
inline const ::ns3::SlRlcPduInfoProto& NrSlSlotAllocProto::slrlcpduinfo(int index) const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return slrlcpduinfo_.Get(index);
}
inline ::ns3::SlRlcPduInfoProto* NrSlSlotAllocProto::add_slrlcpduinfo() {
  // @@protoc_insertion_point(field_add:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return slrlcpduinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ns3::SlRlcPduInfoProto >&
NrSlSlotAllocProto::slrlcpduinfo() const {
  // @@protoc_insertion_point(field_list:ns3.NrSlSlotAllocProto.slRlcPduInfo)
  return slrlcpduinfo_;
}

// uint32 mcs = 11;
inline void NrSlSlotAllocProto::clear_mcs() {
  mcs_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::mcs() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.mcs)
  return mcs_;
}
inline void NrSlSlotAllocProto::set_mcs(::google::protobuf::uint32 value) {
  
  mcs_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.mcs)
}

// uint32 numSlPscchRbs = 10;
inline void NrSlSlotAllocProto::clear_numslpscchrbs() {
  numslpscchrbs_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::numslpscchrbs() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.numSlPscchRbs)
  return numslpscchrbs_;
}
inline void NrSlSlotAllocProto::set_numslpscchrbs(::google::protobuf::uint32 value) {
  
  numslpscchrbs_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.numSlPscchRbs)
}

// uint32 slPscchSymStart = 9;
inline void NrSlSlotAllocProto::clear_slpscchsymstart() {
  slpscchsymstart_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::slpscchsymstart() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPscchSymStart)
  return slpscchsymstart_;
}
inline void NrSlSlotAllocProto::set_slpscchsymstart(::google::protobuf::uint32 value) {
  
  slpscchsymstart_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPscchSymStart)
}

// uint32 slPscchSymLength = 8;
inline void NrSlSlotAllocProto::clear_slpscchsymlength() {
  slpscchsymlength_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::slpscchsymlength() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPscchSymLength)
  return slpscchsymlength_;
}
inline void NrSlSlotAllocProto::set_slpscchsymlength(::google::protobuf::uint32 value) {
  
  slpscchsymlength_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPscchSymLength)
}

// uint32 slPsschSymStart = 7;
inline void NrSlSlotAllocProto::clear_slpsschsymstart() {
  slpsschsymstart_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::slpsschsymstart() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPsschSymStart)
  return slpsschsymstart_;
}
inline void NrSlSlotAllocProto::set_slpsschsymstart(::google::protobuf::uint32 value) {
  
  slpsschsymstart_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPsschSymStart)
}

// uint32 slPsschSymLength = 6;
inline void NrSlSlotAllocProto::clear_slpsschsymlength() {
  slpsschsymlength_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::slpsschsymlength() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPsschSymLength)
  return slpsschsymlength_;
}
inline void NrSlSlotAllocProto::set_slpsschsymlength(::google::protobuf::uint32 value) {
  
  slpsschsymlength_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPsschSymLength)
}

// uint32 slPsschSubChStart = 5;
inline void NrSlSlotAllocProto::clear_slpsschsubchstart() {
  slpsschsubchstart_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::slpsschsubchstart() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPsschSubChStart)
  return slpsschsubchstart_;
}
inline void NrSlSlotAllocProto::set_slpsschsubchstart(::google::protobuf::uint32 value) {
  
  slpsschsubchstart_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPsschSubChStart)
}

// uint32 slPsschSubChLength = 1;
inline void NrSlSlotAllocProto::clear_slpsschsubchlength() {
  slpsschsubchlength_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::slpsschsubchlength() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slPsschSubChLength)
  return slpsschsubchlength_;
}
inline void NrSlSlotAllocProto::set_slpsschsubchlength(::google::protobuf::uint32 value) {
  
  slpsschsubchlength_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slPsschSubChLength)
}

// uint32 maxNumPerReserve = 2;
inline void NrSlSlotAllocProto::clear_maxnumperreserve() {
  maxnumperreserve_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::maxnumperreserve() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.maxNumPerReserve)
  return maxnumperreserve_;
}
inline void NrSlSlotAllocProto::set_maxnumperreserve(::google::protobuf::uint32 value) {
  
  maxnumperreserve_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.maxNumPerReserve)
}

// bool txSci1A = 3;
inline void NrSlSlotAllocProto::clear_txsci1a() {
  txsci1a_ = false;
}
inline bool NrSlSlotAllocProto::txsci1a() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.txSci1A)
  return txsci1a_;
}
inline void NrSlSlotAllocProto::set_txsci1a(bool value) {
  
  txsci1a_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.txSci1A)
}

// uint32 slotNumInd = 4;
inline void NrSlSlotAllocProto::clear_slotnumind() {
  slotnumind_ = 0u;
}
inline ::google::protobuf::uint32 NrSlSlotAllocProto::slotnumind() const {
  // @@protoc_insertion_point(field_get:ns3.NrSlSlotAllocProto.slotNumInd)
  return slotnumind_;
}
inline void NrSlSlotAllocProto::set_slotnumind(::google::protobuf::uint32 value) {
  
  slotnumind_ = value;
  // @@protoc_insertion_point(field_set:ns3.NrSlSlotAllocProto.slotNumInd)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ns3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_sl_2dslot_2dalloc_2eproto
