// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl-sfnsf.proto

#ifndef PROTOBUF_INCLUDED_sl_2dsfnsf_2eproto
#define PROTOBUF_INCLUDED_sl_2dsfnsf_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_sl_2dsfnsf_2eproto 

namespace protobuf_sl_2dsfnsf_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_sl_2dsfnsf_2eproto
namespace ns3 {
class SfnSfProto;
class SfnSfProtoDefaultTypeInternal;
extern SfnSfProtoDefaultTypeInternal _SfnSfProto_default_instance_;
}  // namespace ns3
namespace google {
namespace protobuf {
template<> ::ns3::SfnSfProto* Arena::CreateMaybeMessage<::ns3::SfnSfProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ns3 {

// ===================================================================

class SfnSfProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ns3.SfnSfProto) */ {
 public:
  SfnSfProto();
  virtual ~SfnSfProto();

  SfnSfProto(const SfnSfProto& from);

  inline SfnSfProto& operator=(const SfnSfProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SfnSfProto(SfnSfProto&& from) noexcept
    : SfnSfProto() {
    *this = ::std::move(from);
  }

  inline SfnSfProto& operator=(SfnSfProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SfnSfProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SfnSfProto* internal_default_instance() {
    return reinterpret_cast<const SfnSfProto*>(
               &_SfnSfProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SfnSfProto* other);
  friend void swap(SfnSfProto& a, SfnSfProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SfnSfProto* New() const final {
    return CreateMaybeMessage<SfnSfProto>(NULL);
  }

  SfnSfProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SfnSfProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SfnSfProto& from);
  void MergeFrom(const SfnSfProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SfnSfProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 m_frameNum = 1;
  void clear_m_framenum();
  static const int kMFrameNumFieldNumber = 1;
  ::google::protobuf::uint32 m_framenum() const;
  void set_m_framenum(::google::protobuf::uint32 value);

  // uint32 m_subframeNum = 2;
  void clear_m_subframenum();
  static const int kMSubframeNumFieldNumber = 2;
  ::google::protobuf::uint32 m_subframenum() const;
  void set_m_subframenum(::google::protobuf::uint32 value);

  // uint32 m_slotNum = 3;
  void clear_m_slotnum();
  static const int kMSlotNumFieldNumber = 3;
  ::google::protobuf::uint32 m_slotnum() const;
  void set_m_slotnum(::google::protobuf::uint32 value);

  // int32 m_numerology = 4;
  void clear_m_numerology();
  static const int kMNumerologyFieldNumber = 4;
  ::google::protobuf::int32 m_numerology() const;
  void set_m_numerology(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ns3.SfnSfProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 m_framenum_;
  ::google::protobuf::uint32 m_subframenum_;
  ::google::protobuf::uint32 m_slotnum_;
  ::google::protobuf::int32 m_numerology_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sl_2dsfnsf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SfnSfProto

// uint32 m_frameNum = 1;
inline void SfnSfProto::clear_m_framenum() {
  m_framenum_ = 0u;
}
inline ::google::protobuf::uint32 SfnSfProto::m_framenum() const {
  // @@protoc_insertion_point(field_get:ns3.SfnSfProto.m_frameNum)
  return m_framenum_;
}
inline void SfnSfProto::set_m_framenum(::google::protobuf::uint32 value) {
  
  m_framenum_ = value;
  // @@protoc_insertion_point(field_set:ns3.SfnSfProto.m_frameNum)
}

// uint32 m_subframeNum = 2;
inline void SfnSfProto::clear_m_subframenum() {
  m_subframenum_ = 0u;
}
inline ::google::protobuf::uint32 SfnSfProto::m_subframenum() const {
  // @@protoc_insertion_point(field_get:ns3.SfnSfProto.m_subframeNum)
  return m_subframenum_;
}
inline void SfnSfProto::set_m_subframenum(::google::protobuf::uint32 value) {
  
  m_subframenum_ = value;
  // @@protoc_insertion_point(field_set:ns3.SfnSfProto.m_subframeNum)
}

// uint32 m_slotNum = 3;
inline void SfnSfProto::clear_m_slotnum() {
  m_slotnum_ = 0u;
}
inline ::google::protobuf::uint32 SfnSfProto::m_slotnum() const {
  // @@protoc_insertion_point(field_get:ns3.SfnSfProto.m_slotNum)
  return m_slotnum_;
}
inline void SfnSfProto::set_m_slotnum(::google::protobuf::uint32 value) {
  
  m_slotnum_ = value;
  // @@protoc_insertion_point(field_set:ns3.SfnSfProto.m_slotNum)
}

// int32 m_numerology = 4;
inline void SfnSfProto::clear_m_numerology() {
  m_numerology_ = 0;
}
inline ::google::protobuf::int32 SfnSfProto::m_numerology() const {
  // @@protoc_insertion_point(field_get:ns3.SfnSfProto.m_numerology)
  return m_numerology_;
}
inline void SfnSfProto::set_m_numerology(::google::protobuf::int32 value) {
  
  m_numerology_ = value;
  // @@protoc_insertion_point(field_set:ns3.SfnSfProto.m_numerology)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace ns3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_sl_2dsfnsf_2eproto
